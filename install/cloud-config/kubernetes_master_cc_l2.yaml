#cloud-config
# modify <SSH_PUBLIC_KEY>, <MASTER_IP>, <ETCD_ENDPOINTS> before using
---
hostname: kubernetes-master
users:
  - name: core
    ssh-authorized-keys:
      - "<SSH_PUBLIC_KEY>"
    groups:
      - sudo
    shell: /bin/bash

write_files:
  # FIXME: when need to use kubelet binary to start master then we should have
  # this
  - path: /opt/bin/kubernetes-install.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash

      if [ ! -f /opt/bin/kubelet ]; then
        echo "Kubenetes not installed - installing."

        # Extract the Kubernetes binaries.
        sudo wget -N -P /opt/bin https://github.com/typhoonzero/kubernetes_binaries/releases/download/v1.2.0/kubectl
        sudo wget -N -P /opt/bin https://github.com/typhoonzero/kubernetes_binaries/releases/download/v1.2.0/kubelet
        sudo chmod +x /opt/bin/kubelet /opt/bin/kubectl
      fi

  - path: /etc/kubernetes/manifests/kubernetes_master.manifest
    owner: root
    permissions: 0644
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-controller
      spec:
        hostNetwork: true
        volumes:
          - name: "etc-kubernetes"
            hostPath:
              path: "/etc/kubernetes"
          - name: ssl-certs-kubernetes
            hostPath:
              path: /etc/kubernetes/ssl
          - name: "ssl-certs-host"
            hostPath:
              path: "/usr/share/ca-certificates"
          - name: "var-run-kubernetes"
            hostPath:
              path: "/var/run/kubernetes"
          - name: "etcd-datadir"
            hostPath:
              path: "/var/lib/etcd"
          - name: "usr"
            hostPath:
              path: "/usr"
          - name: "lib64"
            hostPath:
              path: "/lib64"
        containers:
          - name: kube-apiserver
            image: typhoon1986/hyperkube-amd64:v1.2.0
            command:
              - /hyperkube
              - apiserver
              - --allow-privileged=true
              - --bind-address=0.0.0.0
              - --insecure-bind-address=0.0.0.0
              - --advertise-address=<MASTER_IP>
              - --secure-port=443
              - --etcd-servers=<ETCD_ENDPOINTS>
              - --service-cluster-ip-range=10.100.0.0/24
              - --admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
              - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem
              - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
              - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
              - --client-ca-file=/etc/kubernetes/ssl/ca.pem
              - --logtostderr=true
            ports:
              - containerPort: 443
                hostPort: 443
                name: https
              - containerPort: 8080
                hostPort: 8080
                name: local
            volumeMounts:
              - mountPath: /etc/kubernetes/ssl
                name: ssl-certs-kubernetes
                readOnly: true
              - mountPath: /etc/ssl/certs
                name: ssl-certs-host
                readOnly: true
              - mountPath: /etc/kubernetes
                name: "etc-kubernetes"
              - mountPath: /var/run/kubernetes
                name: "var-run-kubernetes"

          - name: kube-controller-manager
            image: typhoon1986/hyperkube-amd64:v1.2.0
            command:
            - /hyperkube
            - controller-manager
            - --master=http://127.0.0.1:8080
            - --service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
            - --root-ca-file=/etc/kubernetes/ssl/ca.pem
            livenessProbe:
              httpGet:
                host: 127.0.0.1
                path: /healthz
                port: 10252s
              initialDelaySeconds: 15
              timeoutSeconds: 1
            volumeMounts:
            - mountPath: /etc/kubernetes/ssl
              name: ssl-certs-kubernetes
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ssl-certs-host
              readOnly: true

          - name: kube-scheduler
            image: typhoon1986/hyperkube-amd64:v1.2.0
            command:
            - /hyperkube
            - scheduler
            - --master=http://127.0.0.1:8080
            livenessProbe:
              httpGet:
                host: 127.0.0.1
                path: /healthz
                port: 10251
              initialDelaySeconds: 15
              timeoutSeconds: 1

          - name: kube-proxy
            image: typhoon1986/hyperkube-amd64:v1.2.0
            command:
            - /hyperkube
            - proxy
            - --master=http://127.0.0.1:8080
            - --proxy-mode=iptables
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /etc/ssl/certs
              name: ssl-certs-host
              readOnly: true

coreos:
  update:
    reboot-strategy: off

  units:
    - name: setup-network-environment.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=-/usr/bin/wget -N -P /opt/bin https://github.com/kelseyhightower/setup-network-environment/releases/download/1.0.1/setup-network-environment
        ExecStartPre=-/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot


    - name: kubernetes-install.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Installs Kubernetes tools

        [Service]
        ExecStart=/opt/bin/kubernetes-install.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: kubelet.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes
        Requires=docker.service kubernetes-install.service setup-network-environment.service
        After=kubernetes-install.service docker.service setup-network-environment.service

        [Service]
        Environment=KUBELET_VERSION=v1.2.4_coreos.1
        EnvironmentFile=/etc/network-environment
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
        --pod_infra_container_image=typhoon1986/pause:2.0 \
        --register-node=true \
        --api-servers=http://${DEFAULT_IPV4}:8080 \
        --network-plugin-dir=/etc/kubernetes/cni/net.d \
        --network-plugin=${NETWORK_PLUGIN} \
        --register-schedulable=false \
        --allow-privileged=true \
        --config=/etc/kubernetes/manifests \
        --hostname-override=${DEFAULT_IPV4} \
        --cluster-dns=10.100.0.10 \
        --cluster-domain=cluster.local \
        --logtostderr=true
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target
